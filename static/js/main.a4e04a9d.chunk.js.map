{"version":3,"sources":["components/Control/Control.module.css","components/Shape/Rect.module.css","components/Layer.module.css","components/Canvas/Canvas.module.css","components/Shape/Rect.tsx","utils/rotate.tsx","utils/throttle.tsx","utils/transform.tsx","utils/useStateRef.tsx","components/Layer.tsx","components/Control/Control.tsx","components/Control/ControlSelected.tsx","components/Canvas/useControlState.tsx","components/Canvas/utils.tsx","components/Canvas/useOnScale.tsx","components/Canvas/Canvas.tsx","components/Canvas/useKeyDown.tsx","components/Canvas/useSelected.tsx","components/Canvas/useChangeState.tsx","components/Canvas/useSubmit.tsx","components/Canvas/useOnMove.tsx","components/Canvas/useOnRotate.tsx","data.tsx","App.tsx","index.js"],"names":["module","exports","Component","React","forwardRef","props","ref","width","height","others","className","clsx","styles","rect","style","displayName","getSize","attrs","rotationAngleY","x","y","angle","Math","acos","sqrt","pow","rotateVector","cos","sin","throttle","method","interval","time","now","Date","transform","values","Object","keys","map","key","join","useStateRef","value","useRef","useEffect","current","SHAPE","Shape","type","rotate","scaleX","scaleY","attributes","useMemo","layer","translate","SCALE_BUTTON","top","left","widthProp","heightProp","onMoveStart","onScaleStart","onRotateStart","onMouseDown","scaleOnlyBoth","abs","control","e","index","scale","cursor","getCursor","role","aria-label","CURSOR_MAP","r","round","widthBase","heightBase","getSizeBase","mergeState","target","calcChange","change","center","PI","SCALE_TYPE","layers","onUpdate","el","useImperativeHandle","shiftKey","keyName","useState","keyDown","setKeyDown","onKeyDown","onKeyUp","window","addEventListener","removeEventListener","useKeyDown","state","setState","add","useCallback","includes","id","remove","filter","clear","useSelected","selected","addSelected","removeSelected","clearSelected","controlState","reset","x1","y1","x2","y2","arr","length","forEach","_rotate","p","min","Infinity","v","max","useControlState","resetControl","changeState","changing","changed","baseX","baseY","startX","startY","scaleType","useChangeState","resetChange","setChangingBase","getBoundingClientRect","c","submit","layersRef","selectedRef","controlRef","changeRef","onUpdateRef","res","useSubmit","setChange","onMove","pageX","pageY","onMoveEnd","once","useOnMove","onScale","onScaleEnd","useOnScale","onRotate","onRotateEnd","useOnRotate","canvas","onClick","stopPropagation","Layer","find","ControlSelected","Control","zIndex","undefined","data","count","push","i","App","mockData","setData","Canvas","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4e04a9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Control_control__28owh\",\"scale\":\"Control_scale__1q0Q-\",\"rotate\":\"Control_rotate__1XCjm\",\"control-selected\":\"Control_control-selected__nlVSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rect\":\"Rect_rect__2CUC7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layer\":\"Layer_layer__39BI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__1B2Ic\"};","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport styles from './Rect.module.css'\r\n\r\nexport interface IRectAttrs {\r\n    width?: number\r\n    height?: number\r\n}\r\n\r\nconst Component = React.forwardRef<HTMLDivElement, IRectAttrs>((props, ref) => {\r\n    const { width = 100, height = 100, ...others } = props\r\n    return (\r\n        <div\r\n            {...others}\r\n            className={clsx(styles.rect)}\r\n            ref={ref}\r\n            style={{\r\n                width,\r\n                height,\r\n            }}\r\n        ></div>\r\n    )\r\n})\r\n\r\nComponent.displayName = 'Rect'\r\nexport default Component\r\n\r\nexport function getSize(attrs: IRectAttrs): { width: number; height: number } {\r\n    return {\r\n        width: attrs.width ?? 0,\r\n        height: attrs.height ?? 0,\r\n    }\r\n}\r\n","/**\r\n * 向量相对y轴的旋转角\r\n *\r\n * 注意：此处坐标是图层坐标 不是数学坐标（y轴方向相反）\r\n * */\r\nexport function rotationAngleY(x: number, y: number) {\r\n    let angle = Math.acos(-y / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)))\r\n\r\n    return x > 0 ? angle : -angle\r\n}\r\n\r\n/**\r\n * 向量旋转\r\n */\r\nexport function rotateVector(x: number, y: number, angle: number) {\r\n    return [\r\n        Math.cos(angle) * x - Math.sin(angle) * y,\r\n        Math.sin(angle) * x + Math.cos(angle) * y,\r\n    ]\r\n}\r\n","export function throttle<T extends (...args: any[]) => void>(\r\n    method: T,\r\n    interval = 100\r\n): T {\r\n    let time = 0\r\n\r\n    return ((...args: any[]) => {\r\n        const now = Date.now()\r\n        if (now - time > interval) {\r\n            method(...args)\r\n            time = now\r\n        }\r\n    }) as T\r\n}\r\n","export type ITransformKey =\r\n    | 'rotate'\r\n    | 'rotateX'\r\n    | 'rotateY'\r\n    | 'rotateZ'\r\n    | 'rotate3D'\r\n    | 'scale'\r\n    | 'scaleX'\r\n    | 'scaleY'\r\n    | 'scale3D'\r\n    | 'skew'\r\n    | 'skewX'\r\n    | 'skewY'\r\n    | 'translate'\r\n    | 'translateX'\r\n    | 'translateY'\r\n    | 'translateZ'\r\n    | 'translate3D'\r\n\r\nexport function transform(\r\n    values: { [K in ITransformKey]?: string | number }\r\n): string {\r\n    return (Object.keys(values) as ITransformKey[])\r\n        .map((key) => `${key}(${values[key]})`)\r\n        .join(' ')\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport function useStateRef<T>(value: T) {\r\n    const ref = useRef<T>(value)\r\n    useEffect(() => {\r\n        ref.current = value\r\n    }, [value])\r\n    return ref\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport clsx from 'clsx'\r\nimport * as Shape from './Shape'\r\nimport * as getSize from './Shape/getSize'\r\nimport { transform } from '../utils'\r\nimport { ILayerBase } from '../types'\r\nimport styles from './Layer.module.css'\r\n\r\nconst SHAPE = {\r\n    rect: Shape.Rect,\r\n}\r\n\r\nexport interface ILayerProps\r\n    extends React.HTMLAttributes<HTMLDivElement>,\r\n        ILayerBase {}\r\n\r\nconst Component = React.forwardRef<HTMLDivElement, ILayerProps>(\r\n    (props, ref) => {\r\n        const {\r\n            type,\r\n            x,\r\n            y,\r\n            rotate,\r\n            scaleX,\r\n            scaleY,\r\n            attributes,\r\n            className,\r\n            ...others\r\n        } = props\r\n\r\n        const { width, height } = useMemo(() => getSize[type](attributes), [\r\n            type,\r\n            attributes,\r\n        ])\r\n\r\n        const Shape = SHAPE[type]\r\n\r\n        return (\r\n            <div\r\n                {...others}\r\n                className={clsx(styles.layer, className)}\r\n                ref={ref}\r\n                style={{\r\n                    width,\r\n                    height,\r\n                    transform: transform({\r\n                        translate: `${x - width / 2}px, ${y - height / 2}px`,\r\n                        rotate: `${rotate}deg`,\r\n                        scaleX,\r\n                        scaleY,\r\n                    }),\r\n                }}\r\n            >\r\n                {Shape && <Shape {...attributes} />}\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\nComponent.displayName = 'Layer'\r\nexport default Component\r\n","import React, { useMemo } from 'react'\r\nimport clsx from 'clsx'\r\nimport { transform } from '../../utils'\r\nimport { ILayerState } from '../../types'\r\nimport styles from './Control.module.css'\r\n\r\nconst SCALE_BUTTON = [\r\n    {\r\n        top: 0,\r\n        left: '50%',\r\n    },\r\n    {\r\n        top: 0,\r\n        left: '100%',\r\n    },\r\n    {\r\n        top: '50%',\r\n        left: '100%',\r\n    },\r\n    {\r\n        top: '100%',\r\n        left: '100%',\r\n    },\r\n    {\r\n        top: '100%',\r\n        left: '50%',\r\n    },\r\n    {\r\n        top: '100%',\r\n        left: 0,\r\n    },\r\n    {\r\n        top: '50%',\r\n        left: 0,\r\n    },\r\n    {\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n]\r\n\r\nexport interface IControlProps\r\n    extends React.HTMLAttributes<HTMLDivElement>,\r\n        ILayerState {\r\n    width: number\r\n    height: number\r\n    onMoveStart?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\r\n    onScaleStart?: (\r\n        e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        index: number\r\n    ) => void\r\n    onRotateStart?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\r\n    scaleOnlyBoth?: boolean\r\n}\r\n\r\nconst Component = React.forwardRef<HTMLDivElement, IControlProps>(\r\n    (props, ref) => {\r\n        const {\r\n            width: widthProp,\r\n            height: heightProp,\r\n            x,\r\n            y,\r\n            rotate,\r\n            scaleX,\r\n            scaleY,\r\n            onMoveStart,\r\n            onScaleStart,\r\n            onRotateStart,\r\n            onMouseDown,\r\n            scaleOnlyBoth = false,\r\n            className,\r\n            style,\r\n            ...others\r\n        } = props\r\n\r\n        const width = useMemo(() => Math.abs(widthProp * scaleX), [\r\n            widthProp,\r\n            scaleX,\r\n        ])\r\n        const height = useMemo(() => Math.abs(heightProp * scaleY), [\r\n            heightProp,\r\n            scaleY,\r\n        ])\r\n\r\n        return (\r\n            <div\r\n                className={clsx(styles.control, className)}\r\n                style={{\r\n                    ...style,\r\n                    width,\r\n                    height,\r\n                    transform: transform({\r\n                        translate: `${x - width / 2}px, ${y - height / 2}px`,\r\n                        rotate: `${rotate}deg`,\r\n                    }),\r\n                }}\r\n                ref={ref}\r\n                onMouseDown={(e) => {\r\n                    onMoveStart?.(e)\r\n                    onMouseDown?.(e)\r\n                }}\r\n                {...others}\r\n            >\r\n                {/* scale button */}\r\n                {SCALE_BUTTON.map(({ top, left }, index) => {\r\n                    if (scaleOnlyBoth && index % 2 === 0) {\r\n                        return null\r\n                    }\r\n                    return (\r\n                        <div\r\n                            className={clsx(styles.scale)}\r\n                            key={index}\r\n                            style={{\r\n                                top,\r\n                                left,\r\n                                cursor: getCursor(index, rotate),\r\n                            }}\r\n                            onMouseDown={(e) => onScaleStart?.(e, index)}\r\n                        ></div>\r\n                    )\r\n                })}\r\n\r\n                {/* rotate buuton */}\r\n                <div\r\n                    className={clsx(styles.rotate)}\r\n                    onMouseDown={(e) => onRotateStart?.(e)}\r\n                >\r\n                    <span role=\"img\" aria-label=\"rotate\">\r\n                        🔃\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\nComponent.displayName = 'Control'\r\nexport default Component\r\n\r\nconst CURSOR_MAP = [\r\n    'n-resize',\r\n    'ne-resize',\r\n    'e-resize',\r\n    'se-resize',\r\n    's-resize',\r\n    'sw-resize',\r\n    'w-resize',\r\n    'nw-resize',\r\n]\r\n\r\nfunction getCursor(index: number, rotate: number) {\r\n    let r = rotate\r\n    while (r < 0) {\r\n        r += 360\r\n    }\r\n    return CURSOR_MAP[((index + Math.round(r / 45)) % 8) % 8]\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport clsx from 'clsx'\r\nimport * as getSize from '../Shape/getSize'\r\nimport { transform } from '../../utils'\r\nimport { ILayerBase } from '../../types'\r\nimport styles from './Control.module.css'\r\n\r\nexport interface IControlSelectedProps\r\n    extends React.HTMLAttributes<HTMLDivElement>,\r\n        ILayerBase {}\r\n\r\nconst Component = React.forwardRef<HTMLDivElement, IControlSelectedProps>(\r\n    (props, ref) => {\r\n        const {\r\n            type,\r\n            x,\r\n            y,\r\n            rotate,\r\n            scaleX,\r\n            scaleY,\r\n            attributes,\r\n            className,\r\n            style,\r\n            ...others\r\n        } = props\r\n\r\n        const { width: widthBase, height: heightBase } = useMemo(\r\n            () => getSize[type](attributes),\r\n            [type, attributes]\r\n        )\r\n\r\n        const width = useMemo(() => Math.abs(widthBase * scaleX), [\r\n            widthBase,\r\n            scaleX,\r\n        ])\r\n        const height = useMemo(() => Math.abs(heightBase * scaleY), [\r\n            heightBase,\r\n            scaleY,\r\n        ])\r\n\r\n        return (\r\n            <div\r\n                className={clsx(styles['control-selected'], className)}\r\n                style={{\r\n                    ...style,\r\n                    width,\r\n                    height,\r\n                    transform: transform({\r\n                        translate: `${x - width / 2}px, ${y - height / 2}px`,\r\n                        rotate: `${rotate}deg`,\r\n                    }),\r\n                }}\r\n                ref={ref}\r\n                {...others}\r\n            ></div>\r\n        )\r\n    }\r\n)\r\n\r\nComponent.displayName = 'ControlSelected'\r\nexport default Component\r\n","import { useState, useCallback } from 'react'\r\nimport { ILayer, ILayerBase, ILayerState } from '../../types'\r\nimport { rotateVector } from '../../utils'\r\nimport * as getSizeBase from '../Shape/getSize'\r\nimport { useSelected } from './useSelected'\r\n\r\nexport interface IControlState extends ILayerState {\r\n    width: number\r\n    height: number\r\n}\r\n\r\n/**\r\n * 根据 selected 设置 Control 的基础状态\r\n */\r\nexport function useControlState() {\r\n    const [state, setState] = useState<IControlState | null>(null)\r\n    const reset = useCallback(\r\n        (\r\n            layers: ILayer[],\r\n            selected: ReturnType<typeof useSelected>['state']\r\n        ) => {\r\n            /* 根据 selected 的 id 获取所有 layer */\r\n            const arr = layers.filter((layer) => selected.includes(layer.id))\r\n\r\n            if (arr.length === 0) {\r\n                return setState(null)\r\n            }\r\n\r\n            /* 当 layer 只有一项时 */\r\n            if (arr.length === 1) {\r\n                const { x, y, rotate } = arr[0]\r\n                const { width, height } = getSize(arr[0])\r\n                return setState({\r\n                    x,\r\n                    y,\r\n                    width,\r\n                    height,\r\n                    rotate,\r\n                    scaleX: 1,\r\n                    scaleY: 1,\r\n                })\r\n            }\r\n\r\n            /* 当 layer 多项时 */\r\n            let x1: number\r\n            let y1: number\r\n            let x2: number\r\n            let y2: number\r\n\r\n            arr.forEach((layer) => {\r\n                const { x, y, rotate } = layer\r\n                const { width, height } = getSize(layer)\r\n\r\n                /* 计算旋转后各点的坐标 */\r\n                const rect = {\r\n                    x1: -width / 2,\r\n                    y1: -height / 2,\r\n                    x2: width / 2,\r\n                    y2: height / 2,\r\n                }\r\n                const _rotate = (rotate * Math.PI) / 180\r\n                const p = [\r\n                    rotateVector(rect.x1, rect.y1, _rotate),\r\n                    rotateVector(rect.x1, rect.y2, _rotate),\r\n                    rotateVector(rect.x2, rect.y1, _rotate),\r\n                    rotateVector(rect.x2, rect.y2, _rotate),\r\n                ]\r\n\r\n                /* 选择极值 */\r\n                x1 = Math.min(x1 ?? Infinity, ...p.map((v) => v[0] + x))\r\n                y1 = Math.min(y1 ?? Infinity, ...p.map((v) => v[1] + y))\r\n                x2 = Math.max(x2 ?? -Infinity, ...p.map((v) => v[0] + x))\r\n                y2 = Math.max(y2 ?? -Infinity, ...p.map((v) => v[1] + y))\r\n            })\r\n\r\n            setState({\r\n                x: (x1! + x2!) / 2,\r\n                y: (y1! + y2!) / 2,\r\n                width: x2! - x1!,\r\n                height: y2! - y1!,\r\n                rotate: 0,\r\n                scaleX: 1,\r\n                scaleY: 1,\r\n            })\r\n        },\r\n        [setState]\r\n    )\r\n\r\n    return { state, setState, reset }\r\n}\r\n\r\nfunction getSize(layer: ILayerBase) {\r\n    const { type, attributes, scaleX, scaleY } = layer\r\n    const { width, height } = getSizeBase[type](attributes)\r\n    return {\r\n        width: width * scaleX,\r\n        height: height * scaleY,\r\n    }\r\n}\r\n","import { ILayer, ILayerState } from '../../types'\r\nimport { rotateVector } from '../../utils'\r\n\r\nexport function mergeState<T extends ILayerState = ILayerState>(\r\n    target: T,\r\n    values: ILayerState\r\n): T {\r\n    target.x += values.x\r\n    target.y += values.y\r\n    target.rotate += values.rotate\r\n    target.scaleX *= values.scaleX\r\n    target.scaleY *= values.scaleY\r\n    return target\r\n}\r\n\r\nexport function calcChange(\r\n    layer: ILayer,\r\n    change: ILayerState,\r\n    center: { x: number; y: number }\r\n): ILayerState {\r\n    let x = layer.x - center.x\r\n    let y = layer.y - center.y\r\n\r\n    /* 位移 */\r\n    x += change.x\r\n    y += change.y\r\n\r\n    /* 缩放 */\r\n    x *= change.scaleX\r\n    y *= change.scaleY\r\n\r\n    /* 旋转 */\r\n    ;[x, y] = rotateVector(x, y, (change.rotate * Math.PI) / 180)\r\n\r\n    x += center.x - layer.x\r\n    y += center.y - layer.y\r\n\r\n    return {\r\n        ...change,\r\n        x,\r\n        y,\r\n    }\r\n}\r\n","import { useCallback, useEffect } from 'react'\r\nimport { throttle, useStateRef } from '../../utils'\r\nimport { IScaleType, useChangeState } from './useChangeState'\r\nimport { useControlState } from './useControlState'\r\n\r\nconst SCALE_TYPE: IScaleType[] = ['y', 'both', 'x', 'both']\r\n\r\nexport function useOnScale({\r\n    controlState,\r\n    changeState,\r\n    submit,\r\n}: {\r\n    controlState: ReturnType<typeof useControlState>\r\n    changeState: ReturnType<typeof useChangeState>\r\n    submit: () => void\r\n}) {\r\n    const { state: control } = controlState\r\n    const { changing, setState: setChange } = changeState\r\n    const controlRef = useStateRef(control)\r\n\r\n    const onScale = useCallback(\r\n        throttle((e: MouseEvent) => {\r\n            const c = changing.current\r\n            if (!(c.changing && controlRef.current)) return\r\n            c.changed = true\r\n            const { x, y } = controlRef.current\r\n\r\n            const res: {\r\n                scaleX?: number\r\n                scaleY?: number\r\n            } = {}\r\n            const scaleX = (e.pageX - c.baseX - x) / (c.startX - c.baseX - x)\r\n            const scaleY = (e.pageY - c.baseY - y) / (c.startY - c.baseY - y)\r\n            switch (c.scaleType) {\r\n                case 'x':\r\n                    res.scaleX = scaleX\r\n                    break\r\n                case 'y':\r\n                    res.scaleY = scaleY\r\n                    break\r\n                default:\r\n                    if (Math.abs(scaleX) > Math.abs(scaleY)) {\r\n                        res.scaleX = scaleX\r\n                        res.scaleY = scaleX\r\n                    } else {\r\n                        res.scaleX = scaleY\r\n                        res.scaleY = scaleY\r\n                    }\r\n            }\r\n            setChange((state) => ({\r\n                ...state,\r\n                ...res,\r\n            }))\r\n        }, 16),\r\n        [changing, setChange]\r\n    )\r\n\r\n    const onScaleEnd = useCallback(() => {\r\n        window.removeEventListener('mousemove', onScale)\r\n        const c = changing.current\r\n        c.changing = false\r\n        submit()\r\n    }, [changing, submit, onScale])\r\n\r\n    const onScaleStart = useCallback(\r\n        (e: React.MouseEvent<HTMLDivElement, MouseEvent>, index: number) => {\r\n            const c = changing.current\r\n            c.changing = true\r\n            c.changed = false\r\n            c.startX = e.pageX\r\n            c.startY = e.pageY\r\n            c.scaleType = SCALE_TYPE[index % 4]\r\n            window.addEventListener('mousemove', onScale)\r\n            window.addEventListener('mouseup', onScaleEnd, {\r\n                once: true,\r\n            })\r\n        },\r\n        [onScale, onScaleEnd, changing]\r\n    )\r\n\r\n    useEffect(\r\n        () => () => {\r\n            window.removeEventListener('mousemove', onScale)\r\n            window.removeEventListener('mouseup', onScaleEnd)\r\n        },\r\n        [onScale, onScaleEnd]\r\n    )\r\n\r\n    return { onScaleStart }\r\n}\r\n","import React, { useCallback, useEffect, useRef } from 'react'\r\nimport clsx from 'clsx'\r\nimport Layer from '../Layer'\r\nimport { Control, Selected as ControlSelected } from '../Control'\r\nimport { ILayer } from '../../types'\r\nimport styles from './Canvas.module.css'\r\nimport { useSelected } from './useSelected'\r\nimport { useKeyDown } from './useKeyDown'\r\nimport { useControlState } from './useControlState'\r\nimport { useChangeState } from './useChangeState'\r\nimport { useSubmit } from './useSubmit'\r\nimport { calcChange, mergeState } from './utils'\r\nimport { useOnMove } from './useOnMove'\r\nimport { useOnScale } from './useOnScale'\r\nimport { useOnRotate } from './useOnRotate'\r\n\r\nexport interface ICanvasProps extends React.HTMLAttributes<HTMLDivElement> {\r\n    layers: ILayer[]\r\n    onUpdate?: (layers: ICanvasProps['layers']) => void\r\n}\r\n\r\nconst Component = React.forwardRef<HTMLDivElement, ICanvasProps>(\r\n    (props, ref) => {\r\n        const { layers, onUpdate, className, ...others } = props\r\n\r\n        const el = useRef<HTMLDivElement>(null)\r\n        React.useImperativeHandle(ref, () => el.current!)\r\n\r\n        /* shift 是否处于按下 */\r\n        const shiftKey = useKeyDown('Shift')\r\n\r\n        /* 被选中的 */\r\n        const {\r\n            state: selected,\r\n            add: addSelected,\r\n            remove: removeSelected,\r\n            clear: clearSelected,\r\n        } = useSelected()\r\n\r\n        /* 控制框的基础状态 */\r\n        const controlState = useControlState()\r\n        const { state: control, reset: resetControl } = controlState\r\n\r\n        /* 修改（暂存区） */\r\n        const changeState = useChangeState()\r\n        const { state: change, changing, reset: resetChange } = changeState\r\n\r\n        /* 获取画布相对于页面的位置 用于后续 Mouse 的坐标计算 */\r\n        const setChangingBase = useCallback(\r\n            (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n                const rect = el.current!.getBoundingClientRect()\r\n                const c = changing.current\r\n                c.baseX = rect.x\r\n                c.baseY = rect.y\r\n            },\r\n            [el, changing]\r\n        )\r\n\r\n        /* layers selected 变动 重置 change 和 control */\r\n        useEffect(() => {\r\n            resetChange()\r\n            resetControl(layers, selected)\r\n        }, [resetControl, resetChange, layers, selected])\r\n\r\n        /* 提交修改内容 */\r\n        const { submit } = useSubmit({\r\n            layers,\r\n            selected,\r\n            control,\r\n            change,\r\n            onUpdate,\r\n        })\r\n\r\n        /* 移动 */\r\n        const { onMoveStart } = useOnMove({\r\n            changeState,\r\n            submit,\r\n        })\r\n\r\n        /* 缩放 */\r\n        const { onScaleStart } = useOnScale({\r\n            controlState,\r\n            changeState,\r\n            submit,\r\n        })\r\n\r\n        /* 旋转 */\r\n        const { onRotateStart } = useOnRotate({\r\n            controlState,\r\n            changeState,\r\n            submit,\r\n        })\r\n\r\n        return (\r\n            <div\r\n                className={clsx(styles.canvas, className)}\r\n                ref={el}\r\n                onClick={(e) => {\r\n                    e.stopPropagation()\r\n                    if (!shiftKey) {\r\n                        if (changing.current.changed) {\r\n                            changing.current.changed = false\r\n                        } else {\r\n                            clearSelected()\r\n                        }\r\n                    }\r\n                }}\r\n                {...others}\r\n            >\r\n                {/* 图层 */}\r\n                {layers.map((layer) => {\r\n                    const { id, ...others } = layer\r\n                    if (control && selected.includes(id)) {\r\n                        mergeState(\r\n                            others,\r\n                            calcChange(layer, change, {\r\n                                x: control.x,\r\n                                y: control.y,\r\n                            })\r\n                        )\r\n                    }\r\n                    return (\r\n                        <Layer\r\n                            {...others}\r\n                            key={id}\r\n                            onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                if (e.shiftKey) {\r\n                                    addSelected(layer)\r\n                                } else {\r\n                                    clearSelected()\r\n                                    addSelected(layer)\r\n                                }\r\n                            }}\r\n                        />\r\n                    )\r\n                })}\r\n\r\n                {/* 选中的框 */}\r\n                {selected.map((id) => {\r\n                    const layer = layers.find((v) => v.id === id)\r\n                    if (!layer) return null\r\n\r\n                    const { id: _id, ...others } = layer\r\n                    if (control && selected.includes(id)) {\r\n                        mergeState(\r\n                            others,\r\n                            calcChange(layer, change, {\r\n                                x: control.x,\r\n                                y: control.y,\r\n                            })\r\n                        )\r\n                    }\r\n                    return (\r\n                        <ControlSelected\r\n                            {...others}\r\n                            key={id}\r\n                            onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                if (e.shiftKey) {\r\n                                    removeSelected(layer)\r\n                                } else {\r\n                                    clearSelected()\r\n                                    addSelected(layer)\r\n                                }\r\n                            }}\r\n                            onMouseDown={(e) => {\r\n                                e.stopPropagation()\r\n                                setChangingBase(e)\r\n                                onMoveStart(e)\r\n                            }}\r\n                        />\r\n                    )\r\n                })}\r\n\r\n                {/* 控制器 */}\r\n                {control && (\r\n                    <Control\r\n                        style={{ zIndex: shiftKey ? -1 : undefined }}\r\n                        {...mergeState({ ...control }, change)}\r\n                        scaleOnlyBoth={selected.length > 1}\r\n                        onMoveStart={(e) => {\r\n                            e.stopPropagation()\r\n                            setChangingBase(e)\r\n                            onMoveStart(e)\r\n                        }}\r\n                        onScaleStart={(e, index) => {\r\n                            e.stopPropagation()\r\n                            setChangingBase(e)\r\n                            onScaleStart(e, index)\r\n                        }}\r\n                        onRotateStart={(e) => {\r\n                            e.stopPropagation()\r\n                            setChangingBase(e)\r\n                            onRotateStart(e)\r\n                        }}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\nComponent.displayName = 'Canvas'\r\nexport default Component\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * 判断按键是否处于按下状态\r\n * @param keyName 按键名 选用 KeyboardEvent['key'] 做判断\r\n */\r\nexport function useKeyDown(keyName: string) {\r\n    const [keyDown, setKeyDown] = useState(false)\r\n    useEffect(() => {\r\n        const onKeyDown = (e: KeyboardEvent) => {\r\n            if (e.key !== keyName) return\r\n            setKeyDown(true)\r\n        }\r\n        let onKeyUp = (e: KeyboardEvent) => {\r\n            if (e.key !== keyName) return\r\n            setKeyDown(false)\r\n        }\r\n        window.addEventListener('keydown', onKeyDown)\r\n        window.addEventListener('keyup', onKeyUp)\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', onKeyDown)\r\n            window.removeEventListener('keyup', onKeyUp)\r\n        }\r\n    }, [setKeyDown, keyName])\r\n\r\n    return keyDown\r\n}\r\n","import { useState, useCallback } from 'react'\r\nimport { ILayer } from '../../types'\r\n\r\nexport function useSelected() {\r\n    const [state, setState] = useState<ILayer['id'][]>([])\r\n\r\n    /* 添加 */\r\n    const add = useCallback(\r\n        (layer: ILayer) => {\r\n            setState((state) => {\r\n                if (state.includes(layer.id)) return state\r\n                return [...state, layer.id]\r\n            })\r\n        },\r\n        [setState]\r\n    )\r\n\r\n    /* 移除 */\r\n    const remove = useCallback(\r\n        (layer: ILayer) => {\r\n            setState((state) => {\r\n                if (!state.includes(layer.id)) return state\r\n                return state.filter((id) => id !== layer.id)\r\n            })\r\n        },\r\n        [setState]\r\n    )\r\n\r\n    /* 清空 */\r\n    const clear = useCallback(() => {\r\n        setState([])\r\n    }, [setState])\r\n\r\n    return {\r\n        state,\r\n        setState,\r\n        add,\r\n        remove,\r\n        clear,\r\n    }\r\n}","import { useState, useCallback, useRef } from 'react'\r\nimport { ILayerState } from '../../types'\r\n\r\nexport type IScaleType = 'x' | 'y' | 'both'\r\n\r\nexport function useChangeState() {\r\n    const [state, setState] = useState<ILayerState>(createChangeState())\r\n    const changing = useRef({\r\n        changing: false,\r\n        changed: false,\r\n\r\n        /* 记录画布位置 */\r\n        baseX: 0,\r\n        baseY: 0,\r\n\r\n        /* 记录鼠标起始点 */\r\n        startX: 0,\r\n        startY: 0,\r\n\r\n        scaleType: 'both' as IScaleType,\r\n    })\r\n\r\n    const reset = useCallback(() => setState(createChangeState()), [setState])\r\n\r\n    return { state, setState, reset, changing }\r\n}\r\n\r\nexport function createChangeState() {\r\n    return {\r\n        x: 0,\r\n        y: 0,\r\n        rotate: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n    }\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useStateRef } from '../../utils'\r\nimport { ICanvasProps } from './Canvas'\r\nimport { useChangeState } from './useChangeState'\r\nimport { useControlState } from './useControlState'\r\nimport { useSelected } from './useSelected'\r\nimport { calcChange, mergeState } from './utils'\r\n\r\nexport function useSubmit({\r\n    layers,\r\n    selected,\r\n    control,\r\n    change,\r\n    onUpdate,\r\n}: {\r\n    layers: ICanvasProps['layers']\r\n    selected: ReturnType<typeof useSelected>['state']\r\n    control: ReturnType<typeof useControlState>['state']\r\n    change: ReturnType<typeof useChangeState>['state']\r\n    onUpdate: ICanvasProps['onUpdate']\r\n}) {\r\n    const layersRef = useStateRef(layers)\r\n    const selectedRef = useStateRef(selected)\r\n    const controlRef = useStateRef(control)\r\n    const changeRef = useStateRef(change)\r\n    const onUpdateRef = useStateRef(onUpdate)\r\n\r\n    const submit = useCallback(() => {\r\n        const layers = layersRef.current\r\n        const selected = selectedRef.current\r\n        const control = controlRef.current\r\n        const change = changeRef.current\r\n\r\n        onUpdateRef.current?.(\r\n            layers.map((layer) => {\r\n                if (!selected.includes(layer.id)) return layer\r\n\r\n                const res = { ...layer }\r\n                mergeState(\r\n                    res,\r\n                    calcChange(res, change, control ?? { x: res.x, y: res.y })\r\n                )\r\n                return res\r\n            })\r\n        )\r\n    }, [layersRef, selectedRef, controlRef, changeRef, onUpdateRef])\r\n\r\n    return { submit }\r\n}\r\n","import { useCallback, useEffect } from 'react'\r\nimport { throttle } from '../../utils'\r\nimport { useChangeState } from './useChangeState'\r\n\r\nexport function useOnMove({\r\n    changeState,\r\n    submit,\r\n}: {\r\n    changeState: ReturnType<typeof useChangeState>\r\n    submit: () => void\r\n}) {\r\n    const { changing, setState: setChange } = changeState\r\n\r\n    const onMove = useCallback(\r\n        throttle((e: MouseEvent) => {\r\n            const c = changing.current\r\n            if (!c.changing) return\r\n            c.changed = true\r\n            setChange((state) => ({\r\n                ...state,\r\n                x: e.pageX - c.startX,\r\n                y: e.pageY - c.startY,\r\n            }))\r\n        }, 16),\r\n        [changing, setChange]\r\n    )\r\n\r\n    const onMoveEnd = useCallback(() => {\r\n        window.removeEventListener('mousemove', onMove)\r\n        const c = changing.current\r\n        c.changing = false\r\n        submit()\r\n    }, [changing, submit, onMove])\r\n\r\n    const onMoveStart = useCallback(\r\n        (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n            const c = changing.current\r\n            c.changing = true\r\n            c.changed = false\r\n            c.startX = e.pageX\r\n            c.startY = e.pageY\r\n            window.addEventListener('mousemove', onMove)\r\n            window.addEventListener('mouseup', onMoveEnd, {\r\n                once: true,\r\n            })\r\n        },\r\n        [onMove, onMoveEnd, changing]\r\n    )\r\n\r\n    useEffect(\r\n        () => () => {\r\n            window.removeEventListener('mousemove', onMove)\r\n            window.removeEventListener('mouseup', onMoveEnd)\r\n        },\r\n        [onMove, onMoveEnd]\r\n    )\r\n\r\n    return { onMoveStart }\r\n}\r\n","import { useCallback, useEffect } from 'react'\r\nimport { rotationAngleY, throttle, useStateRef } from '../../utils'\r\nimport { useChangeState } from './useChangeState'\r\nimport { useControlState } from './useControlState'\r\n\r\nexport function useOnRotate({\r\n    controlState,\r\n    changeState,\r\n    submit,\r\n}: {\r\n    controlState: ReturnType<typeof useControlState>\r\n    changeState: ReturnType<typeof useChangeState>\r\n    submit: () => void\r\n}) {\r\n    const { state: control } = controlState\r\n    const { changing, setState: setChange } = changeState\r\n    const controlRef = useStateRef(control)\r\n\r\n    const onRotate = useCallback(\r\n        throttle((e: MouseEvent) => {\r\n            const c = changing.current\r\n            if (!(c.changing && controlRef.current)) return\r\n            c.changed = true\r\n            const { x, y } = controlRef.current\r\n\r\n            const curRotate = rotationAngleY(e.pageX - x, e.pageY - y)\r\n            const startRotate = rotationAngleY(c.startX - x, c.startY - y)\r\n            const rotate = ((curRotate - startRotate) / Math.PI) * 180\r\n            setChange((state) => ({\r\n                ...state,\r\n                rotate,\r\n            }))\r\n        }, 16),\r\n        [changing, setChange, controlRef]\r\n    )\r\n\r\n    const onRotateEnd = useCallback(() => {\r\n        window.removeEventListener('mousemove', onRotate)\r\n        const c = changing.current\r\n        c.changing = false\r\n        submit()\r\n    }, [changing, submit, onRotate])\r\n\r\n    const onRotateStart = useCallback(\r\n        (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n            const c = changing.current\r\n            c.changing = true\r\n            c.changed = false\r\n            c.startX = e.pageX\r\n            c.startY = e.pageY\r\n            window.addEventListener('mousemove', onRotate)\r\n            window.addEventListener('mouseup', onRotateEnd, {\r\n                once: true,\r\n            })\r\n        },\r\n        [onRotate, onRotateEnd, changing]\r\n    )\r\n\r\n    useEffect(\r\n        () => () => {\r\n            window.removeEventListener('mousemove', onRotate)\r\n            window.removeEventListener('mouseup', onRotateEnd)\r\n        },\r\n        [onRotate, onRotateEnd]\r\n    )\r\n\r\n    return { onRotateStart }\r\n}\r\n","import { ILayer } from './types'\r\n\r\nconst data: ILayer[] = []\r\n\r\nlet count = 0\r\nfunction add(props: Partial<ILayer>) {\r\n    data.push({\r\n        id: `${count++}`,\r\n        type: 'rect',\r\n        x: 0,\r\n        y: 0,\r\n        rotate: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        ...props,\r\n    })\r\n}\r\n\r\nadd({\r\n    type: 'rect',\r\n    x: 400,\r\n    y: 100,\r\n    rotate: 30,\r\n    attributes: {\r\n        width: 100,\r\n        height: 200,\r\n    },\r\n})\r\n\r\nadd({\r\n    type: 'rect',\r\n    x: 400,\r\n    y: 200,\r\n    rotate: 130,\r\n    attributes: {\r\n        width: 100,\r\n        height: 200,\r\n    },\r\n})\r\n\r\nadd({\r\n    type: 'rect',\r\n    x: 400,\r\n    y: 200,\r\n    scaleX: 0.5,\r\n    scaleY: 3,\r\n    attributes: {\r\n        width: 200,\r\n        height: 100,\r\n    },\r\n})\r\n\r\nadd({\r\n    type: 'rect',\r\n    x: 300,\r\n    y: 300,\r\n    scaleX: 3,\r\n    scaleY: 0.5,\r\n    attributes: {\r\n        width: 200,\r\n        height: 100,\r\n    },\r\n})\r\n\r\nadd({\r\n    type: 'rect',\r\n    x: 300,\r\n    y: 100,\r\n    attributes: {\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n})\r\n\r\nfor (let i = 0; i < 50; i += 1) {\r\n    add({\r\n        type: 'rect',\r\n        x: i * 10,\r\n        y: i * 10,\r\n        attributes: {\r\n            width: 100,\r\n            height: 100,\r\n        },\r\n    })\r\n}\r\n\r\nexport default data\r\n","import React, { useState } from 'react'\nimport Canvas from './components/Canvas'\nimport mockData from './data'\nimport { ILayer } from './types'\n\nfunction App() {\n    const [data, setData] = useState<ILayer[]>(mockData)\n    return <Canvas layers={data} onUpdate={setData} />\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}